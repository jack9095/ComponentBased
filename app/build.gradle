apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]
    defaultConfig {
        applicationId "com.example.fly.componentbased"
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }

    //执行lint检查，有任何的错误或者警告提示，都会终止构建，我们可以将其关掉。
    lintOptions {
        abortOnError false
    }

    // 不加载第三方依赖包的如下文件
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/MANIFEST.MF'
        exclude 'META-INF/MANIFEST'
        exclude 'META-INF/manifest.mf'
        exclude 'project.properties'
        exclude 'proguard-project.txt'
        exclude 'bin/AndroidManifest.xml'
        exclude 'libs/android-support-v4.jar'
        exclude 'AndroidManifest.xml'
    }

    signingConfigs {
        debug {
            storeFile file(keystoreConfig)
            storePassword storePasswordConfig
            keyAlias keyAliasConfig
            keyPassword keyPasswordConfig
        }

        release {
            storeFile file(keystoreConfig)
            storePassword storePasswordConfig
            keyAlias keyAliasConfig
            keyPassword keyPasswordConfig
        }
    }

    buildTypes {

        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
            zipAlignEnabled false
            shrinkResources false
            signingConfig signingConfigs.debug
            buildConfigField "boolean", "LOG_DEBUG", "true"
        }

        release {
            // 混淆开启
            minifyEnabled true
            //前一部分代表系统默认的android程序的混淆文件，该文件已经包含了基本的混淆声明，后一个文件是自己的定义混淆文件
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"

            // 签名配置
            signingConfig signingConfigs.release

            //Zipalign优化
            zipAlignEnabled true

            // 移除无用的resource文件
            shrinkResources true

            // 不显示日志
            buildConfigField "boolean", "LOG_DEBUG", "false"
        }
    }

    // studio升级到3.0以后必须得这么配置渠道，否则报错：All flavors must now belong to a named flavor dimension. Learn more at https://d.android.com/r/tools/flavorDimensions-missing-error-message.html
    flavorDimensions("fly")

    //渠道Flavors，配置不同风格的app,友盟渠道统计时用到
    productFlavors {

        xiaomi {
            dimension "fly"
            manifestPlaceholders=[UMENG_CHANNEL_VALUE:"xiaomi"]
        }
        "360" {
            dimension "fly"
            manifestPlaceholders=[UMENG_CHANNEL_VALUE:"360"]
        }
        yingyongbao {
            dimension "fly"
            manifestPlaceholders=[UMENG_CHANNEL_VALUE:"yingyongbao"]
        }
        wandoujia {
            dimension "fly"
            manifestPlaceholders=[UMENG_CHANNEL_VALUE:"wandoujia"]
        }
        baidu {
            dimension "fly"
            manifestPlaceholders=[UMENG_CHANNEL_VALUE:"baidu"]
        }
    }
}

// 添加aar必备
repositories {
    flatDir {
        dirs 'libs','../commonlibrary/libs'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:3.0.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    testCompile rootProject.ext.dependencies["junit"]
    implementation rootProject.ext.dependencies["appcompat-v7"]
    implementation rootProject.ext.dependencies["constraint-layout"]
    implementation rootProject.ext.dependencies["arouter-api"]
    implementation rootProject.ext.dependencies["recyclerview-v7"]
    implementation rootProject.ext.dependencies["butterknife"]
    implementation rootProject.ext.dependencies["annotations"]
    annotationProcessor rootProject.ext.dependencies["arouter-compiler"]
    annotationProcessor rootProject.ext.dependencies["dagger2-apt-compiler"]
    provided rootProject.ext.dependencies["javax.annotation"]
    if (isNeedHomeModule.toBoolean()) {
        implementation project(':home')
    }
    if (isNeedVideoModule.toBoolean()) {
        implementation project(':video')
    }
    if (isNeedMessageModule.toBoolean()) {
        implementation project(':message')
    }
    if (isNeedLiveModule.toBoolean()) {
        implementation project(':live')
    }
    implementation project(':commonlibrary')

//    implementation 'com.anggrayudi:android-hidden-api:28.1'
}